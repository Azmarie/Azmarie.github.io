{"version":3,"sources":["webpack:///./src/utils/pluralize-reading-time.ts","webpack:///./src/templates/blog-post.tsx"],"names":["pluralizeReadingTime","time","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","keywords","className","style","marginTop","published","scale","display","rhythm","longDate","shortDate","timeToRead","items","categories","fluid","cover","childImageSharp","alt","coverAuthor","dangerouslySetInnerHTML","__html","html","margin","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"4FAAe,SAASA,EAAqBC,GAC3C,OAAUA,EAAV,KAAkBA,EAAO,EAAI,OAAS,OAAtC,QADF,mC,kCCAA,6HAuFeC,UAvE0D,SAAC,GAAoC,IAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACrEC,EAAeH,EAA/BI,eACOC,EADwBL,EAATM,KACIC,aAA1BC,MACAC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAK,GAAKL,EAAKQ,YAAYH,MAC3BI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,QAClDC,SAAUX,EAAKQ,YAAYG,WAE7B,yBAAKC,UAAU,aACb,wBAAIC,MAAO,CAAEC,UAAW,IACrBd,EAAKQ,YAAYO,UAAY,GAAK,UAClCf,EAAKQ,YAAYH,OAEpB,2BACEQ,MAAK,iBACAG,aAAM,IADN,CAEHC,QAAS,QACTH,UAAWI,aAAQ,KAErBb,MAAOL,EAAKQ,YAAYW,UAEvBnB,EAAKQ,YAAYY,UARpB,MAQyC1B,YAAqBM,EAAKqB,aAEnE,kBAAC,IAAD,CAAOC,MAAOtB,EAAKQ,YAAYe,aAC/B,kBAAC,IAAD,CACEC,MAAOxB,EAAKQ,YAAYiB,MAAMC,gBAAgBF,MAC9CG,IAAK3B,EAAKQ,YAAYoB,YACtBhB,UAAU,eACVC,MAAO,CACLC,UAAWI,YAAO,MAGtB,yBAAKL,MAAO,CAAEC,UAAWI,YAAO,IAAMW,wBAAyB,CAAEC,OAAQ9B,EAAK+B,QAC9E,wBACElB,MAAO,CACLmB,OAAWd,YAAO,GAAZ,QAGV,wBACEL,MAAO,CACLI,QAAS,OACTgB,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACG9B,GACC,kBAAC,OAAD,CAAM+B,GAAI/B,EAASgC,OAAOC,KAAMC,IAAI,QAApC,KACKlC,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAM8B,GAAI9B,EAAK+B,OAAOC,KAAMC,IAAI,QAC7BjC,EAAKC,YAAYH,MADpB","file":"component---src-templates-blog-post-tsx-d07c3b8ab0b3e84964ba.js","sourcesContent":["export default function pluralizeReadingTime(time: number) {\n  return `${time} ${time > 1 ? 'mins' : 'min'} read`;\n}\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Pills from '../components/pills';\nimport { rhythm, scale } from '../utils/typography';\nimport pluralizeReadingTime from '../utils/pluralize-reading-time';\n\ninterface BlogPostTemplateProps {\n  data: any;\n  pageContext: any;\n  location: Location;\n}\n\nconst BlogPostTemplate: React.FunctionComponent<BlogPostTemplateProps> = ({ data, pageContext, location }) => {\n  const { markdownRemark: post, site } = data;\n  const { title: siteTitle } = site.siteMetadata;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={`${post.frontmatter.title}`}\n        description={post.frontmatter.description || post.excerpt}\n        keywords={post.frontmatter.keywords}\n      />\n      <div className=\"blog-post\">\n        <h1 style={{ marginTop: 0 }}>\n          {post.frontmatter.published ? '' : 'DRAFT: '}\n          {post.frontmatter.title}\n        </h1>\n        <small\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginTop: rhythm(-1),\n          }}\n          title={post.frontmatter.longDate}\n        >\n          {post.frontmatter.shortDate} &middot; {pluralizeReadingTime(post.timeToRead)}\n        </small>\n        <Pills items={post.frontmatter.categories} />\n        <Image\n          fluid={post.frontmatter.cover.childImageSharp.fluid}\n          alt={post.frontmatter.coverAuthor}\n          className=\"u-full-width\"\n          style={{\n            marginTop: rhythm(1),\n          }}\n        />\n        <div style={{ marginTop: rhythm(1) }} dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            margin: `${rhythm(1)} 0`,\n          }}\n        />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        shortDate: date(formatString: \"MMMM DD, YYYY\")\n        longDate: date(formatString: \"MMMM DD, YYYY, h:mm:ss a\")\n        description\n        categories\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1440) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        coverAuthor\n        coverOriginalUrl\n        keywords\n        published\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}