{"version":3,"sources":["webpack:///./src/components/main-bio.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/utils/pluralize-reading-time.ts","webpack:///./src/components/pills.tsx","webpack:///./src/utils/capitalize.ts"],"names":["MainBio","query","render","data","author","site","siteMetadata","className","style","marginBottom","rhythm","role","aria-label","SOCIAL","map","s","key","kind","target","href","url","icon","color","title","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","border","imgStyle","BlogIndex","location","siteTitle","posts","allMarkdownRemark","edges","keywords","KEYWORDS","node","frontmatter","fields","slug","imageAuthor","coverAuthor","fluid","cover","boxShadow","to","longDate","shortDate","pluralizeReadingTime","timeToRead","items","categories","marginTop","dangerouslySetInnerHTML","__html","description","excerpt","time","Pill","item","idx","str","encodeURIComponent","toLowerCase","replace","marginRight","head","tail","slice","toUpperCase","capitalize"],"mappings":"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","file":"component---src-pages-index-tsx-6f3343c0da3e0c4d1f22.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport SOCIAL from '../constants/social';\nimport { rhythm } from '../utils/typography';\n\nconst mainBioQuery = graphql`\n  query MainBioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic-optimized.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 250, height: 250, quality: 95) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          instagram\n        }\n      }\n    }\n  }\n`;\n\nconst MainBio: React.FunctionComponent<unknown> = () => {\n  return (\n    <StaticQuery\n      query={mainBioQuery}\n      render={(data) => {\n        const { author } = data.site.siteMetadata;\n        return (\n          <div\n            className=\"main-bio-container\"\n            style={{\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <div className=\"main-bio\">\n              <h1 className=\"heroine\" style={{ marginBottom: rhythm(1 / 5) }}>\n                <span role=\"img\" aria-label=\"woman technologist\">\n                  üë©üèª‚Äçüíª\n                </span>{' '}\n                Hello, it's Azmarie, a software engineer and computer vision enthusiastic{' '}\n                <span role=\"img\" aria-label=\"sparkles\">\n                  ‚ú®\n                </span>\n              </h1>\n              <ul\n                className=\"horizontal-links\"\n                style={{ marginBottom: rhythm(1) }}\n              >\n                {SOCIAL.map((s) => (\n                  <li key={s.kind}>\n                    <a target=\"_blank\" className=\"u-no-box-shadow\" href={s.url}>\n                      <FontAwesomeIcon\n                        icon={s.icon}\n                        color=\"var(--gray)\"\n                        title={`Link to my ${s.kind}`}\n                      />\n                    </a>\n                  </li>\n                ))}\n              </ul>\n              <p>\n                I&apos;m a Software Engineer,\n                {/* at Salesforce,  */}\n                {' '}\n                <span role=\"img\" aria-label=\"coffee\">\n                  ‚òïÔ∏è\n                </span>{' '} and{' '}\n                <span role=\"img\" aria-label=\"cat\">\n                  üê± lover\n                </span>.{' '} \n                Previously, I was a graduate researcher in Computer Vision, \n                broadly interested in image-to-image translation and computational creativity.\n                Here, I plan to write about computer vision, software engineering, and random things. \n                <br />\n                <br />\n                Glad you found me!\n              </p>\n            </div>\n            <Image\n              className=\"avatar\"\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginBottom: 0,\n                minWidth: 250,\n                borderRadius: `100%`,\n                border: `8px solid var(--white)`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default MainBio;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport MainBio from '../components/main-bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Pills from '../components/pills';\nimport { rhythm } from '../utils/typography';\nimport pluralizeReadingTime from '../utils/pluralize-reading-time';\nimport KEYWORDS from '../constants/seo-keywords';\n\ninterface BlogIndexProps {\n  data: any;\n  location: Location;\n}\n\nconst BlogIndex: React.FunctionComponent<BlogIndexProps> = ({\n  data,\n  location,\n}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" keywords={KEYWORDS} />\n      <MainBio />\n      {posts.map(({ node }: { node: any }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        const imageAuthor = node.frontmatter.coverAuthor;\n        const { fluid } = node.frontmatter.cover.childImageSharp;\n        return (\n          <div\n            className=\"blog-post-preview\"\n            style={{ marginBottom: rhythm(1) }}\n            key={node.fields.slug}\n          >\n            <h2\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h2>\n            <small title={node.frontmatter.longDate}>\n              {node.frontmatter.shortDate} &middot;{' '}\n              {pluralizeReadingTime(node.timeToRead)}\n            </small>\n            <Pills items={node.frontmatter.categories} />\n            <Image\n              style={{ marginTop: rhythm(0.5), marginBottom: rhythm(0.5) }}\n              fluid={fluid}\n              alt={imageAuthor}\n            />\n            <p\n              dangerouslySetInnerHTML={{\n                __html: node.frontmatter.description || node.excerpt,\n              }}\n            />\n            <Link className={`squiggly`} to={node.fields.slug}>\n              Read more\n            </Link>\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true }, kind: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            shortDate: date(formatString: \"MMMM DD, YYYY\")\n            longDate: date(formatString: \"MMMM DD, YYYY, h:mm:ss a\")\n            title\n            description\n            categories\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 1200) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export default function pluralizeReadingTime(time: number) {\n  return `${time} ${time > 1 ? 'mins' : 'min'} read`;\n}\n","import React from 'react';\nimport capitalize from '../utils/capitalize';\nimport { rhythm } from '../utils/typography';\n\ninterface PillsProps {\n  items: string[];\n}\n\nfunction cssSafe(str: string) {\n  return encodeURIComponent(str.toLowerCase()).replace(/%[0-9A-F]{2}/gi, '');\n}\n\nconst Pill: React.FunctionComponent<PillsProps> = ({ items }) => {\n  return (\n    <div className=\"pills\">\n      {items.map((item, idx) => (\n        <span\n          className={`pill pill--${cssSafe(item)}`}\n          key={idx}\n          style={{ marginRight: rhythm(1 / 4) }}\n        >\n          {capitalize(item)}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default Pill;\n","export default function capitalize(str: string) {\n  const head = str[0];\n  const tail = str.slice(1);\n  return `${head.toUpperCase()}${tail}`;\n}\n"],"sourceRoot":""}