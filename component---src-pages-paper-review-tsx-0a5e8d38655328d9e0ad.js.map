{"version":3,"sources":["webpack:///./src/constants/seo-keywords.ts","webpack:///./src/components/paper-review-intro.tsx","webpack:///./src/pages/paper-review.tsx"],"names":["PaperReviewIntro","query","render","data","author","site","siteMetadata","className","style","marginBottom","rhythm","rel","target","href","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","border","imgStyle","PaperReviewsIndex","location","siteTitle","title","paperReviews","allMarkdownRemark","edges","keywords","KEYWORDS","map","node","frontmatter","fields","slug","relativeSlug","key","boxShadow","to","summaryType","shortDate","items","categories","marginTop","fluid","cover","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"2FAAe,kO,mJCwEAA,EAlD4C,WACzD,OACE,kBAAC,cAAD,CACEC,MApBkB,YAqBlBC,OAAQ,SAACC,GAAS,IACRC,EAAWD,EAAKE,KAAKC,aAArBF,OACR,OACE,yBACEG,UAAU,qBACVC,MAAO,CACLC,aAAcC,YAAO,OAGvB,yBAAKH,UAAU,YACb,6FAEE,6BAFF,iDAIE,6BACA,6BALF,mBAKyB,IACvB,uBACEI,IAAI,aACJC,OAAO,SACPC,KAAK,iFAHP,0CASJ,kBAAC,IAAD,CACEN,UAAU,SACVO,MAAOX,EAAKY,OAAOC,gBAAgBF,MACnCG,IAAKb,EACLI,MAAO,CACLC,aAAc,EACdS,SAAU,IACVC,aAAc,OACdC,OAAQ,0BAEVC,SAAU,CACRF,aAAc,c,YCLfG,UAzC4D,SAAC,GAAuB,IAArBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SAC5EC,EAAYrB,EAAKE,KAAKC,aAAamB,MACnCC,EAAevB,EAAKwB,kBAAkBC,MAE5C,OACE,kBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,kBAAC,IAAD,CAAKC,MAAM,eAAeI,SAAUC,MACpC,kBAAC,EAAD,MACCJ,EAAaK,KAAI,YAA6B,IAA1BC,EAA0B,EAA1BA,KACbP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAC9CC,EAAe,gBAAgBJ,EAAKE,OAAOC,KACjD,OACE,yBAAK5B,UAAU,sBAAsBC,MAAO,CAAEC,aAAcC,YAAO,IAAM2B,IAAKL,EAAKE,OAAOC,MACxF,wBACE3B,MAAO,CACLC,aAAc,IAGhB,kBAAC,OAAD,CAAMD,MAAO,CAAE8B,UAAW,QAAUC,GAAIH,GACrCJ,EAAKC,YAAYO,YADpB,IACwCf,IAG1C,2BAAOA,MAAOO,EAAKC,YAAYQ,WAAYT,EAAKC,YAAYQ,WAC5D,kBAAC,IAAD,CAAOC,MAAOV,EAAKC,YAAYU,aAC/B,kBAAC,IAAD,CACEnC,MAAO,CAAEoC,UAAWlC,YAAO,IAAMD,aAAcC,YAAO,KACtDmC,MAAOb,EAAKC,YAAYa,MAAM9B,gBAAgB6B,MAC9C5B,IAAKe,EAAKC,YAAYR,QAExB,uBACEsB,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB","file":"component---src-pages-paper-review-tsx-0a5e8d38655328d9e0ad.js","sourcesContent":["export default [\n  `blog`,\n  `personal blog`,\n  `computational art`,\n  `computational creativity`,\n  `computational photography`,\n  `visual computing`,\n  `gatsby`,\n  `software engineer`,\n  `software engineering`,\n  `Azmarie Wang`,\n  `computer vision`,\n  `style transfer`,\n];\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { rhythm } from '../utils/typography';\n\nconst SpeakerBioQuery = graphql`\n  query SpeakerBioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic-optimized.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 250, height: 250, quality: 95) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`;\n\nconst PaperReviewIntro: React.FunctionComponent<unknown> = () => {\n  return (\n    <StaticQuery\n      query={SpeakerBioQuery}\n      render={(data) => {\n        const { author } = data.site.siteMetadata;\n        return (\n          <div\n            className=\"main-bio-container\"\n            style={{\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <div className=\"main-bio\">\n              <p>\n                Collection of my paper reading notes and amateur paper reviews.\n                <br />\n                Around a variety of topics in Computer Vision.\n                <br />\n                <br />A great guide in{' '}\n                <a\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                  href=\"https://blizzard.cs.uwaterloo.ca/keshav/home/Papers/data/07/paper-reading.pdf\"\n                >\n                  How to Read a Paper - S. Keshav 2016\n                </a>\n              </p>\n            </div>\n            <Image\n              className=\"avatar\"\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginBottom: 0,\n                minWidth: 250,\n                borderRadius: `100%`,\n                border: `8px solid var(--white)`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default PaperReviewIntro;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Pills from '../components/pills';\nimport Image from 'gatsby-image';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport PaperReviewIntro from '../components/paper-review-intro';\nimport { rhythm } from '../utils/typography';\nimport KEYWORDS from '../constants/seo-keywords';\n\ninterface PaperReviewsIndexProps {\n  data: any;\n  location: Location;\n}\n\nconst PaperReviewsIndex: React.FunctionComponent<PaperReviewsIndexProps> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const paperReviews = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Paper Review\" keywords={KEYWORDS} />\n      <PaperReviewIntro />\n      {paperReviews.map(({ node }: { node: any }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        const relativeSlug = `/paper-review${node.fields.slug}`;\n        return (\n          <div className=\"paperReview-preview\" style={{ marginBottom: rhythm(1) }} key={node.fields.slug}>\n            <h2\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={relativeSlug}>\n                {node.frontmatter.summaryType}&mdash;{title}\n              </Link>\n            </h2>\n            <small title={node.frontmatter.shortDate}>{node.frontmatter.shortDate}</small>\n            <Pills items={node.frontmatter.categories} />\n            <Image\n              style={{ marginTop: rhythm(0.5), marginBottom: rhythm(0.5) }}\n              fluid={node.frontmatter.cover.childImageSharp.fluid}\n              alt={node.frontmatter.title}\n            />\n            <p\n              dangerouslySetInnerHTML={{\n                __html: node.frontmatter.description || node.excerpt,\n              }}\n            />\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default PaperReviewsIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true }, kind: { eq: \"paperReview\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            shortDate: date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            summaryType\n            paperPDFLink\n            categories\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 1200) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}